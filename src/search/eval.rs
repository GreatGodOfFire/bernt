use crate::{
    bitloop,
    position::{PieceColor, PieceType, Position},
};

pub fn eval(pos: &Position) -> (i32, i32, i32, i32) {
    let mut mg = 0;
    let mut eg = 0;
    let mut phase = 0;

    bitloop!(pos.colors[0] | pos.colors[1] => sq, {
        let piece = pos.piece_at(sq);

        if piece.ty != PieceType::None {
            let sign = if piece.color == pos.side { 1 } else { -1 };
            mg += MG_PSTS[piece.ty][flip(sq, piece.color) as usize] * sign;
            eg += EG_PSTS[piece.ty][flip(sq, piece.color) as usize] * sign;
            phase += PHASE[piece.ty];
        }
    });
    phase = phase.min(24);

    ((mg * phase + eg * (24 - phase)) / 24, mg, eg, phase)
}

#[inline]
pub(super) fn flip(sq: u8, side: PieceColor) -> u8 {
    if side == PieceColor::White {
        sq
    } else {
        sq ^ 56
    }
}

pub(super) const PHASE: [i32; 6] = [0, 1, 1, 2, 4, 0];

pub(super) const MG_PSTS: [[i32; 64]; 6] =
    [MG_PAWN, MG_KNIGHT, MG_BISHOP, MG_ROOK, MG_QUEEN, MG_KING];
pub(super) const EG_PSTS: [[i32; 64]; 6] =
    [EG_PAWN, EG_KNIGHT, EG_BISHOP, EG_ROOK, EG_QUEEN, EG_KING];

#[rustfmt::skip]
const MG_PAWN: [i32; 64] = [
       0,    0,    0,    0,    0,    0,    0,    0,
      25,   76,   67,   49,   72,   73,   90,   36,
      38,   74,   76,   63,   90,   64,   92,   33,
      22,   73,   70,   77,   81,   80,   86,   18,
      75,  103,   99,  120,   73,  115,  122,   40,
     151,  130,  116,  155,  107,  126,  125,  150,
     125,  114,  108,  131,  115,  109,  109,  111,
       0,    0,    0,    0,    0,    0,    0,    0,
];
#[rustfmt::skip]
const MG_KNIGHT: [i32; 64] = [
     298,  282,  257,  273,  332,  230,  265,  293,
     268,  348,  316,  290,  284,  303,  317,  283,
     289,  293,  317,  329,  293,  310,  315,  257,
     307,  309,  313,  353,  319,  323,  277,  299,
     312,  340,  338,  362,  377,  368,  297,  313,
     309,  295,  326,  357,  346,  318,  315,  303,
     299,  278,  323,  305,  295,  311,  297,  285,
     281,  297,  298,  299,  304,  306,  293,  295,
];
#[rustfmt::skip]
const MG_BISHOP: [i32; 64] = [
     295,  289,  302,  310,  301,  308,  285,  269,
     303,  317,  306,  328,  329,  322,  329,  299,
     279,  345,  315,  325,  328,  346,  331,  314,
     282,  360,  359,  323,  358,  348,  312,  322,
     319,  340,  346,  332,  340,  362,  331,  328,
     319,  310,  334,  341,  328,  318,  301,  312,
     286,  317,  314,  308,  311,  337,  305,  285,
     288,  300,  305,  301,  302,  299,  298,  297,
];
#[rustfmt::skip]
const MG_ROOK: [i32; 64] = [
     418,  441,  455,  487,  526,  496,  461,  445,
     372,  440,  454,  453,  509,  482,  466,  448,
     432,  437,  486,  480,  466,  491,  460,  453,
     447,  473,  487,  535,  503,  504,  486,  470,
     493,  481,  512,  500,  502,  488,  510,  489,
     519,  500,  526,  513,  530,  507,  509,  534,
     506,  503,  515,  528,  524,  526,  529,  531,
     511,  500,  503,  503,  512,  515,  511,  522,
];
#[rustfmt::skip]
const MG_QUEEN: [i32; 64] = [
     894,  870,  860,  885,  898,  884,  897,  860,
     890,  859,  906,  890,  897,  872,  902,  896,
     892,  893,  892,  889,  873,  897,  883,  866,
     877,  907,  912,  897,  915,  891,  901,  898,
     903,  903,  917,  949,  956,  948,  903,  906,
     891,  913,  927,  940,  933,  926,  942,  930,
     879,  893,  911,  929,  916,  932,  927,  932,
     896,  908,  916,  911,  906,  914,  908,  908,
];
#[rustfmt::skip]
const MG_KING: [i32; 64] = [
       9,  -14,    6,   -3,   56,    3,  100,   95,
      -9,  -49,  -24,   -2,    5,    6,   26,  -35,
       2,   18,   -8,  -21,  -27,  -20,  -16,  -28,
       7,    2,  -13,  -16,    2,    5,    1,    2,
     -15,   -3,    4,    6,    2,    7,   12,   -1,
      -2,    6,   -8,   -6,    2,   -1,   -9,   -2,
     -10,  -11,   -8,   -5,    0,   -9,   -1,   -1,
      -6,    6,   -3,    3,    0,   -6,    0,   -2,
];
#[rustfmt::skip]
const EG_PAWN: [i32; 64] = [
       0,    0,    0,    0,    0,    0,    0,    0,
     155,  144,  164,  176,  124,  140,  141,  170,
     141,  155,  127,  123,   86,  119,  139,  164,
     150,  139,  125,  135,  132,  142,  127,  191,
     150,  137,  117,  134,  138,  118,  123,  176,
     157,  163,  130,  159,   93,  196,  111,  169,
     150,  141,  185,  166,  143,   97,  101,  165,
       0,    0,    0,    0,    0,    0,    0,    0,
];
#[rustfmt::skip]
const EG_KNIGHT: [i32; 64] = [
     287,  230,  270,  287,  299,  268,  242,  274,
     292,  321,  304,  278,  311,  292,  296,  263,
     258,  286,  262,  288,  328,  296,  267,  247,
     295,  278,  270,  301,  287,  274,  277,  297,
     268,  270,  327,  265,  302,  314,  291,  310,
     286,  259,  288,  303,  310,  264,  308,  281,
     276,  278,  272,  277,  248,  266,  278,  285,
     277,  289,  292,  285,  280,  304,  276,  279,
];
#[rustfmt::skip]
const EG_BISHOP: [i32; 64] = [
     305,  331,  284,  302,  292,  271,  291,  301,
     329,  290,  339,  302,  306,  282,  272,  302,
     278,  300,  283,  329,  267,  287,  296,  300,
     293,  284,  302,  277,  317,  296,  309,  282,
     286,  340,  285,  300,  272,  319,  287,  300,
     327,  261,  312,  286,  304,  289,  320,  305,
     276,  337,  289,  295,  313,  332,  288,  304,
     320,  287,  297,  291,  310,  270,  302,  278,
];
#[rustfmt::skip]
const EG_ROOK: [i32; 64] = [
     459,  478,  464,  473,  455,  472,  466,  463,
     501,  490,  480,  480,  478,  482,  486,  436,
     499,  490,  489,  468,  492,  506,  490,  437,
     483,  475,  506,  489,  474,  501,  503,  471,
     477,  466,  479,  482,  477,  481,  464,  452,
     470,  479,  487,  493,  509,  500,  489,  497,
     462,  491,  487,  462,  474,  478,  462,  465,
     422,  417,  422,  418,  417,  435,  424,  452,
];
#[rustfmt::skip]
const EG_QUEEN: [i32; 64] = [
     896,  879,  875,  877,  887,  887,  892,  886,
     893,  895,  896,  871,  902,  888,  894,  899,
     908,  890,  913,  892,  910,  907,  900,  898,
     886,  906,  898,  927,  917,  902,  910,  900,
     896,  905,  910,  920,  943,  917,  911,  908,
     905,  910,  904,  928,  920,  910,  925,  902,
     896,  906,  896,  907,  907,  913,  918,  907,
     888,  900,  895,  890,  885,  895,  889,  884,
];
#[rustfmt::skip]
const EG_KING: [i32; 64] = [
      72,   47,    0,   -9,  -69,  -20,  -54,  -68,
      71,   28,   22,  -13,  -18,  -17,   -8,  -30,
       3,   37,   10,   24,   29,   36,  -16,  -72,
      32,   25,   21,   14,   34,   51,   29,    8,
     -16,  -11,   54,   51,   30,   64,   38,    9,
      12,   20,   30,   35,   34,   24,  -40,   -8,
     -73,  -32,  -44,   -3,  -15,  -30,    1,  -20,
     -72,  -54,  -46,   -2,  -11,  -89,  -18,  -12,
];
